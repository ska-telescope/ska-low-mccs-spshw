{{ $mccs_chart := index .Values "ska-low-mccs" "mccs" }}

{{ if .Values.global.minikube }}
kind: PersistentVolume
apiVersion: v1
metadata:
  name: teststore-{{ .Chart.Name}}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: teststore-{{ .Chart.Name}}-{{ .Release.Name }}
    chart: {{ .Chart.Name}}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  storageClassName: standard
  persistentVolumeReclaimPolicy: Recycle
  capacity:
    storage: 50Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: {{ default "/tmp/minikube-tango/" .Values.minikubeHostPath }}
{{ end }}
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: teststore-{{ .Chart.Name}}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: teststore-{{ .Chart.Name}}-{{ .Release.Name }}
    chart: {{ .Chart.Name}}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    transient: "functional-test"
spec:
{{ if .Values.global.minikube }}
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
{{ else }}
  storageClassName: nfss1
  accessModes:
    - ReadWriteMany
{{ end }}
  resources:
    requests:
      storage: 50Mi
---

apiVersion: v1
kind: Pod
metadata:
  name: functional-{{ .Chart.Name}}-{{ .Release.Name }}
  labels:
    transient: "functional-test"
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  initContainers:
  - name:  functional-permission-{{ .Chart.Name}}-{{ .Release.Name }}
    image: busybox
    command: ["/bin/chown","1000:1000", "/data"]
    volumeMounts:
    - name: testdata
      mountPath: /data
  containers:
  - name: functional-{{ .Chart.Name}}-{{ .Release.Name }}
    image: "{{ $mccs_chart.image.registry }}/{{ $mccs_chart.image.image }}:{{ $mccs_chart.image.tag }}"
    imagePullPolicy: {{ $mccs_chart.image.pullPolicy }}
    command:
      - /bin/bash
      - "-ce"
      - |
        pytest --testbed local testing/src/tests/functional --junitxml=/reports/functional-test.xml --cucumberjson=/reports/cucumber.json &> /reports/functional-test-output.txt
    env:
    - name: TANGO_HOST
      value: {{ .Values.global.tango_host }} 
    volumeMounts:
    - name: testdata
      mountPath: /reports
  volumes:
  - name: testdata
    persistentVolumeClaim:
      claimName: teststore-{{ .Chart.Name}}-{{ .Release.Name }}
  restartPolicy: Never
{{- with .Values.nodeSelector }}
  nodeSelector:
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.affinity }}
  affinity:
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.tolerations }}
  tolerations:
{{ toYaml . | indent 4 }}
{{- end }}
