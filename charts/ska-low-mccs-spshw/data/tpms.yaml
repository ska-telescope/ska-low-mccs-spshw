{{- $defaults := dict "enabled" true "logging_level_default" 3 "port" 10000 "version" "tpm_v1_6" "simulation_config" 0 "test_config" 0}}
{{- $tiles := .Values.deviceServers.tpms}}
name: "tile-{{.Release.Name}}"
function: ska-low-mccs-spshw-tile
domain: ska-low-mccs-spshw
instances:
{{- range $key, $this_tile := $tiles.instances}}
{{- if (pluck "enabled" $this_tile $tiles $defaults | first)}}
  - {{printf "tile-%04d" (int $key)}}
{{- end}}
{{- end}}
command: MccsTile
server: 
  name: "MccsTile"
  instances:
{{- range $key, $this_tile := $tiles.instances}}
    - name: {{printf "tile-%04d" (int $key)}}
      classes:
      - name: "MccsTile"
        devices:
        - name: {{printf "low-mccs/tile/%04d" (int $key)}}
          properties:
          - name: "TileId"
            values:
            - {{$key | toString | quote}}
          - name: "SubrackFQDN"
            values:
            - {{printf "low-mccs/subrack/%04d" (int $this_tile.subrack)}}
          - name: "SubrackBay"
            values:
            - {{$this_tile.subrack_bay | toString | quote}}
          - name: "AntennasPerTile"
            values:
            - "16"
          - name: "LoggingLevelDefault"
            values:
            - {{pluck "logging_level_default" $this_tile $tiles $defaults | first | toString | quote}}
          - name: "TpmIp"
            values:
            - {{$this_tile.host | quote}}
          - name: "TpmCpldPort"
            values:
            - {{pluck "port" $this_tile $tiles $defaults | first | toString | quote}}
          - name: "TpmVersion"
            values:
            - {{pluck "version" $this_tile $tiles $defaults | first | quote}}
          - name: "SimulationConfig"
            values:
            - {{pluck "simulation_config" $this_tile $tiles $defaults | first | toString | quote}}
          - name: "TestConfig"
            values:
            - {{pluck "test_config" $this_tile $tiles $defaults | first | toString | quote}}
{{- end}}
depends_on:
  - device: sys/database/2
image:
{{- with .Values.image}}
  registry: {{.registry | quote}}
  image: {{.name | quote}}
  tag: {{.tag | quote}}
  pullPolicy: {{.pullPolicy | quote}}
{{- end}}
livenessProbe:
{{ toYaml .Values.livenessProbe | indent 2 }}
readinessProbe:
{{ toYaml .Values.readinessProbe | indent 2 }}
{{- if (hasKey $tiles "reachable_from") }}
nodeSelector:
  kubernetes.io/hostname: {{ $tiles.reachable_from }}
{{- end}}
