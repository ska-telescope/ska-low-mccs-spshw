# Default values for mccs (ska-low-mccs-spshw )
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

display: ":0"
xauthority: "~/.Xauthority"

system: SW-infrastructure
subsystem: low-mccs-spshw 
telescope: SKA-low

labels:
  app: ska-low-mccs-spshw 

global:
  minikube: true
  tango_host: databaseds-tango-base:10000
  cluster_domain: cluster.local

livenessProbe:
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3
readinessProbe:
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3

dsconfig:
  image:
    registry: artefact.skao.int
    image: ska-tango-images-tango-dsconfig
    tag: 1.5.1
    pullPolicy: IfNotPresent

# The following values overwrite the default values in the postgresql dependency.
# See https://artifacthub.io/packages/helm/bitnami/postgresql
postgresql:
  fullnameOverride: station-calibration-postgresql

  commonLabels:
    app: ska-low-mccs-spshw

  image:
    debug: true

  auth:
    postgresPassword: "secretpassword"

  primary:
    service:
      type: LoadBalancer

    initdb:
      scriptsConfigMap: ska-low-mccs-spshw-initdb
      user: "postgres"

    persistence:
      enabled: false
      ## @param primary.persistence.mountPath The path the volume will be mounted at
      ## Note: useful when using custom PostgreSQL images
      ##
      mountPath: /bitnami/postgresql
      ## @param primary.persistence.storageClass PVC Storage Class for PostgreSQL Primary data volume
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClass: "nfss1"
      ## @param primary.persistence.accessModes PVC Access Mode for PostgreSQL volume
      ##
      accessModes:
        - ReadWriteMany
      ## @param primary.persistence.size PVC Storage Request for PostgreSQL volume
      ##
      size: 12Gi

initDbName: ska-low-mccs-spshw-initdb # must be equals to postgresql.primary.initdb.scriptsConfigMap
initDbBasePath: data/
initDbScripts:
- create_tables.sql

resources:
  requests:
    cpu: 20m
    memory: 50Mi

ska-low-mccs-daq:
  image:
    # registry: artefact.skao.int
    # name: ska-low-mccs-daq
    # tag: 0.5.0
    registry: docker.io/library # registry.gitlab.com/ska-telescope/mccs/ska-low-mccs-daq
    name: ska-low-mccs-daq
    tag: 0.5.0-dirty
    pullPolicy: IfNotPresent

image:
  registry: docker.io/library # artefact.skao.int
  name: ska-low-mccs-spshw
  tag: 0.11.0
  pullPolicy: IfNotPresent

deviceServers: {} # e.g....
  # spsstations:
  #   "s8-1":
  #     station_id: 345
  #     cabinet_network_address: 10.0.0.0
  #     subracks:
  #     - "s8-1-1"
  #     tpms:
  #     - "s8-1-10"
  #     - "s8-1-13"
  #     logging_level_default: 5
  # calibrationstores:
  #   "s8-1":
  #     logging_level_default: 5
  # mockfieldstations:
  #   "s8-1":
  #     logging_level_default: 5
  # stationcalibrators:
  #   "s8-1":
  #     logging_level_default: 5
  # daqs:
  #   "s8-1":
  #     id: 345
  #     host: daq-simulator-s8-1
  #     port: 50051
  #     receiver_interface: eth0
  #     receiver_ip: ""
  #     receiver_port: 4660
  #     skuid_url: http://skuid-svc:9870/
  #     logging_level_default: 5
  # subracks:
  #   "s8-1-1":
  #     srmb_host: subrack-simulator-s8-1
  #     srmb_port: 8081
  #     logging_level_default: 5
  #     nodeSelector:
  #       kubernetes.io/hostname: psi-node3
  # tpms:
  #   "s8-1-10":
  #     tile_id: 10
  #     host: 10.0.10.201
  #     port: 10000
  #     version: tpm_v1_6
  #     subrack: "s8-1-1"
  #     subrack_slot: 1
  #     simulation_config: 1
  #     test_config: 1
  #     logging_level_default: 5
  #     nodeSelector:
  #       kubernetes.io/hostname: psi-node3

simulators: {} # e.g.
  # daqs:
  #   "s8-1":
  #     host: daq-simulator-s8-1
  #     port: 50051
  # subracks:
  #   "s8-1-1":
  #     srmb_host: subrack-simulator-s8-1
  #     srmb_port: 8081

pgadmin4:
  enabled: false
