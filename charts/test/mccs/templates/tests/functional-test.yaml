{{ if .Values.minikube }}
kind: PersistentVolume
apiVersion: v1
metadata:
  name: teststore-{{ template "tango-util.name" . }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: teststore-{{ template "tango-util.name" . }}-{{ .Release.Name }}
    chart: {{ template "tango-util.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  storageClassName: standard
  persistentVolumeReclaimPolicy: Recycle
  capacity:
    storage: 50Mi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: {{ default "/tmp/minikube-tango/" .Values.minikubeHostPath }}
{{ end }}
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: teststore-{{ template "tango-util.name" . }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: teststore-{{ template "tango-util.name" . }}-{{ .Release.Name }}
    chart: {{ template "tango-util.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    transient: "functional-test"
spec:
{{ if .Values.minikube }}
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
{{ else }}
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
{{ end }}
  resources:
    requests:
      storage: 50Mi
---

apiVersion: v1
kind: Pod
metadata:
  name: functional-{{ template "tango-util.name" . }}-{{ .Release.Name }}
  labels:
    transient: "functional-test"
  annotations:
    "helm.sh/hook": test-success
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  initContainers:
  - name:  functional-permission-{{ template "tango-util.name" . }}-{{ .Release.Name }}
    image: busybox
    command: ["/bin/chown","1000:1000", "/data"]
    volumeMounts:
    - name: testdata
      mountPath: /data
  containers:
  - name: functional-{{ template "tango-util.name" . }}-{{ .Release.Name }}
    image: "{{ .Values.project.image.registry }}/{{ .Values.project.image.image }}:{{ .Values.project.image.tag }}"
    imagePullPolicy: {{ .Values.project.image.pullPolicy }}
    command:
      - /bin/bash
      - "-ce"
      - |
        pip3 install -rrequirements-tst.txt  # TODO: should be part of image?
        pytest --true-context tests -k functional --junitxml=/reports/functional-test.xml --cucumberjson=/reports/cucumber.json
    env:
{{ include "tango-util.dbenv" . | indent 4 }}
    volumeMounts:
    - name: testdata
      mountPath: /reports
  volumes:
  - name: testdata
    persistentVolumeClaim:
      claimName: teststore-{{ template "tango-util.name" . }}-{{ .Release.Name }}
  restartPolicy: Never
{{- with .Values.nodeSelector }}
  nodeSelector:
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.affinity }}
  affinity:
{{ toYaml . | indent 4 }}
{{- end }}
{{- with .Values.tolerations }}
  tolerations:
{{ toYaml . | indent 4 }}
{{- end }}
