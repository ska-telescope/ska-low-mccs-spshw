display: ":0"
xauthority: "~/.Xauthority"

enabled: true

system: SW-infrastructure
subsystem: low-mccs
telescope: SKA-low

labels:
  app: ska-low-mccs
annotations:
  app.gitlab.com/app: CI_PROJECT_PATH_SLUG
  app.gitlab.com/env: CI_ENVIRONMENT_SLUG

global:
  sub-system:
    ska-tango-base:
      enabled: false
    taranta:
      enabled: false
    archiver:
      enabled: false
  annotations:
    app.gitlab.com/app: taranta
    app.gitlab.com/env: taranta
  minikube: true
  tango_host: databaseds-tango-base-test:10000

livenessProbe:
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3
readinessProbe:
  initialDelaySeconds: 0
  periodSeconds: 10
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 3

ska-taranta:
  enabled: true
  ingress:
    enabled: true
    nginx: true
    hostname: k8s.stfc.skao.int
  tangogql:
    replicas: 1
    resources:
      requests:
        cpu: 600m # 600m = 0.6 CPU
        memory: 512Mi # 512Mi = 0.5 GB mem
      limits:
        memory: 1024Mi # 1024Mi = 1 GB mem

ska-taranta-dashboard:
  ingress:
    enabled: true
    nginx: true
    hostname: test-taranta.k8s.stfc.skao.int
ska-taranta-auth:
  ingress:
    enabled: true
    nginx: true
    hostname: test-taranta.k8s.stfc.skao.int

# Jupyterhub is a large image and you may experience a kubelet timeout MCCS-1238.
# Error: UPGRADE FAILED: pre-upgrade hooks failed: timed out waiting for the condition
# You can perform a manual pull using: 
# minikube image pull registry.gitlab.com/ska-telescope/sdi/ska-cicd-deploy-low-itf/tango-notebook:0.1.1
jupyterhub:
  hub:
    baseUrl: /jupyterhub/
  ingress:
    pathType: Prefix
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
  singleuser:
    image:
      name: registry.gitlab.com/ska-telescope/sdi/ska-cicd-deploy-low-itf/tango-notebook
      tag: 0.1.1
    extraEnv:
      TANGO_HOST: "databaseds-tango-base-test.ska-low-mccs:10000"
  proxy:
    service:
      type: ClusterIP

# example overrides
# ska-low-mccs:
#   deviceServers:
#     # no tiles
#     tiles:
#       instances: []
#     # change controller command
#     controller:
#       command: "SimController"
