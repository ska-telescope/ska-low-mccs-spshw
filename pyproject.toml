[tool.poetry]
name = "ska-low-mccs"
version = "0.9.1"
description = "The Monitoring, Control and Calibration Subsystem (MCCS) of the SKA Low telescope"
license = "BSD-3-Clause"
authors = ["MCCS team"]
readme = "README.md"
documentation = "https://developer.skatelescope.org/projects/ska-low-mccs"
include = ["./pyfabil-1.1-py3-none-any.whl","./aavs_system-1.1-py3-none-any.whl"]

[[tool.poetry.source]]
name = 'ska-nexus'
url = 'https://artefact.skao.int/repository/pypi-internal/simple'

[tool.poetry.dependencies]
aavs_system = {path = "./aavs_system-1.1-py3-none-any.whl"}
python = "~3.10"
astropy = "^5.0.4"
backoff = "^2.1.2"
fire = "^0.4.0"
future = "^0.18.2"
enum34 = "^1.1.10"
jsonschema = "^4.9.0"
numpy = "^1.23.0"
pytango = "9.3.3"
pyfabil = {path = "./pyfabil-1.1-py3-none-any.whl"}
PyYAML = "^6.0"
requests = "^2.28.1"
scipy = "^1.9.1"
ska-tango-base = "^0.14.0"
ska-control-model = "0.1.2"
ska-ser-logging = "^0.4.1"
ska-low-mccs-common = "^0.1.2"
transitions = "^0.9.0"
certifi = "^2022.6.15"
typing_extensions = "^4.3.0"
singleton-decorator = "1.0.0"
slacker = "0.14.0"
h5py = "3.7.0"
lockfile = "0.12.2"
matplotlib = "3.5.3"

[tool.poetry.group.dev.dependencies]
pre-commit = "^2.20.0"
pylint = "^2.15.3"
pylint-junit = "^0.3.2"
pytest = "6.2.5"
pytest-bdd = "^6.0.1"
pytest-cov = "^3.0.0"
pytest-json-report = "^1.5.0"
pytest-mock = "^3.8.2"
pytest-repeat = "^0.9.1"
pytest-timeout = "^2.1.0"
pytest-xdist = "^2.5.0"
coverage = "^6.4.2"
black = "^22.6.0"
docformatter = "^1.4"
darglint = "^1.8.1"
flake8 = "^5.0.1"
flake8-formatter-junit-xml = "^0.0.6"
flake8-builtins = "^1.5.3"
flake8-docstrings = "^1.6.0"
flake8-use-fstring = "^1.4"
flake8-rst-docstrings = "^0.2.7"
mypy = "^0.971"
pep8-naming = "^0.13.1"
types-pkg-resources = "^0.1.3"
types-requests = "^2.28.6"
types-PyYAML = "^6.0.11"
isort = "^5.10.1"

[tool.poetry.scripts]
MccsAntenna = "ska_low_mccs.antenna.antenna_device:main"
MccsAPIU = "ska_low_mccs.apiu.apiu_device:main"
MccsController = "ska_low_mccs.controller.controller_device:main"
MccsSubarray = "ska_low_mccs.subarray.subarray_device:main"
MccsSubarrayBeam = "ska_low_mccs.subarray_beam.subarray_beam_device:main"
MccsSubrack = "ska_low_mccs.subrack.subrack_device:main"
MccsStation = "ska_low_mccs.station.station_device:main"
MccsStationBeam = "ska_low_mccs.station_beam.station_beam_device:main"
MccsTile = "ska_low_mccs.tile.tile_device:main"
MccsTelState = "ska_low_mccs.tel_state.tel_state_device:main"
mccs-controller = "ska_low_mccs.controller.controller_cli:main"
mccs-tile = "ska_low_mccs.tile.tile_cli:main"

[tool.pytest.ini_options]
testpaths = "testing/src/"
addopts = "--json-report --json-report-file=build/reports/report.json --cov-report html:build/htmlcov --cov-report xml:build/reports/code-coverage.xml --cov-report term:skip-covered --cov=ska_low_mccs --junitxml=build/reports/unit-tests.xml --verbose"
console_output_style = "progress"
junit_family = "legacy"

[tool.coverage.paths]
source = ["src"]

[tool.coverage.run]
data_file = ".coverage/.coverage"
branch = true
source = ["ska_low_mccs"]

omit=[
    # team decision that testing of CLIs is unnecessary
    "*/*_cli.py",
    # legacy code, no point investing in test coverage
    "*/tile_1_2.py",
]

[tool.coverage.report]
show_missing = false

[build-system]
requires = ["poetry-core>=1.1.13"]
build-backend = "poetry.core.masonry.api"
