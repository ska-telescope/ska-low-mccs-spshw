[tool.poetry]
name = "ska-low-mccs-spshw"
version = "0.11.0"
description = "The Monitoring, Control and Calibration Subsystem (MCCS SPSHW) of the SKA Low telescope"
license = "BSD-3-Clause"
authors = ["MCCS team"]
readme = "README.md"
documentation = "https://developer.skatelescope.org/projects/ska-low-mccs-spshw"

[[tool.poetry.source]]
name = 'ska-nexus'
url = 'https://artefact.skao.int/repository/pypi-internal/simple'

[tool.poetry.dependencies]
python = "~3.10"
aavs_system = { git = "https://gitlab.com/ska-telescope/aavs-system.git", rev = "74c03585a3ba7bdbfd259f044b0d8a7f77951c96", subdirectory = "python" }
pyfabil = { git = "https://bitbucket.org/lessju/pyfabil.git", rev = "c5e10ffde94b656e5d4439803916d50972052e42" }
fire = "^0.5.0"
numpy = "1.25.2"
psycopg = {extras = ["binary"], version = "^3.1.10"}
psycopg-pool = "^3.1.7"
pytango = "9.4.2"
PyYAML = "^6.0.1"
requests = "^2.31.0"
scipy = "^1.11.2"
ska-tango-base = "^0.19.1"
ska-control-model = "^0.3.1"
ska-low-mccs-common = "0.9.1"
ska-ser-skuid = "^3.3.3"
fastapi = "^0.103.1"
uvicorn = {extras = ["standard"], version = "^0.23.2"}
typing-extensions = "^4.7.1"
future = "^0.18.3"
# ska-low-mccs-daq-interface = "^0.1.1"
ska-low-mccs-daq-interface = { git = "https://gitlab.com/ska-telescope/mccs/ska-low-mccs-daq-interface.git", branch="mccs-1631" }

# The following have been added for the DaqSimulator.
singleton-decorator = "1.0.0"
slacker = "0.14.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.4.0"
pylint = "^2.17.5"
pylint-junit = "^0.3.2"
pytest = "^6.2"
pytest-bdd = "^6.1.1"
pytest-cov = "^4.1.0"
pytest-forked = "^1.6.0"
pytest-json-report = "^1.5.0"
pytest-mock = "^3.11.1"
pytest-repeat = "^0.9.1"
pytest-timeout = "^2.1.0"
coverage = "^7.3.0"
black = "^23.7.0"
darglint = "^1.8.1"
flake8 = "^6.1.0"
flake8-formatter-junit-xml = "^0.0.6"
flake8-builtins = "^2.1.0"
flake8-docstrings = "^1.7.0"
flake8-use-fstring = "^1.4"
flake8-rst-docstrings = "^0.3.0"
mypy = "^1.5.1"
pep8-naming = "^0.13.3"
types-pkg-resources = "^0.1.3"
types-requests = "^2.31.0.2"
types-pyyaml = "^6.0.12.11"
isort = "^5.12.0"
httpx = "^0.24.1"
ska-tango-testing = "^0.6.1"

[tool.poetry.group.docs.dependencies]
Sphinx = "^6.2.1"
ska-ser-sphinx-theme = "^0.1.1"
sphinx-autodoc-typehints = "^1.23.0"
sphinxcontrib-plantuml = "^0.25"
fastapi = "^0.103.1"
fire = "^0.5.0"
PyYAML = "^6.0.1"
typing-extensions = "^4.7.1"
uvicorn = {extras = ["standard"], version = "^0.23.2"}
# ska-low-mccs-daq-interface = "^0.1.1"
ska-low-mccs-daq-interface = { git = "https://gitlab.com/ska-telescope/mccs/ska-low-mccs-daq-interface.git", branch="mccs-1631" }

[tool.poetry.scripts]
MccsStationCalibrator = "ska_low_mccs_spshw.station_calibrator.station_calibrator_device:main"
MccsCalibrationStore = "ska_low_mccs_spshw.calibration_store.calibration_store_device:main"
MockFieldStation = "ska_low_mccs_spshw.mocks.mock_field_station_device:main"
SpsStation = "ska_low_mccs_spshw.station.station_device:main"
MccsSubrack = "ska_low_mccs_spshw.subrack.subrack_device:main"
SubrackSimulator = "ska_low_mccs_spshw.subrack.subrack_simulator_server:main"
MccsTile = "ska_low_mccs_spshw.tile.tile_device:main"
Mccs-tile = "ska_low_mccs_spshw.tile.tile_cli:main"
MccsDaqReceiver = "ska_low_mccs_spshw.daq_receiver.daq_receiver_device:main"
DaqSimulator = "ska_low_mccs_spshw.daq_receiver.daq_simulator:main"


[tool.pytest.ini_options]
testpaths = "tests/"
addopts = "--json-report --json-report-file=build/reports/report.json --cov-report html:build/htmlcov --cov-report xml:build/reports/code-coverage.xml --cov-report term:skip-covered --cov=ska_low_mccs_spshw --junitxml=build/reports/unit-tests.xml --verbose"
console_output_style = "progress"
junit_family = "legacy"

[tool.coverage.paths]
source = ["src"]

[tool.coverage.run]
data_file = ".coverage/.coverage"
branch = true
source = ["ska_low_mccs"]

omit=[
    # team decision that testing of CLIs is unnecessary
    "*/*_cli.py",
    # legacy code, no point investing in test coverage
    "*/tile_1_2.py",
]

[tool.coverage.report]
show_missing = false

[build-system]
requires = ["poetry-core>=1.1.13"]
build-backend = "poetry.core.masonry.api"
