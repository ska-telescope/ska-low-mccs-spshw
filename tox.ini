[tox]
skipsdist = true
isolated_build = true
envlist = py37
sitepackages = true

[testenv]
description = run tests
envdir = {toxworkdir}/.test_env
allowlist_externals = poetry
commands =
    poetry install
    poetry run python3 -B -m pytest {posargs:--cov-fail-under=80}  # -B for https://github.com/pytest-dev/pytest-bdd/issues/401
sitepackages = false

[testenv:test]
description = run tests in parallel
envdir = {toxworkdir}/.test_env
allowlist_externals = poetry
commands =
    poetry install
    poetry run python3 -m pytest --dist loadscope --numprocesses auto {posargs}

[testenv:lint]
docformatter_args = --wrap-summaries 88 --wrap-descriptions 72 --pre-summary-newline

description = apply style and report linting 
envdir = {toxworkdir}/.lint_env
allowlist_externals = poetry

commands = 
    poetry install --no-root
    poetry run python3 -m black {posargs:src/ testing/src/}
    poetry run python3 -m docformatter -r -i {[testenv:lint]docformatter_args} {posargs:src/ testing/src/}
    poetry run python3 -m flake8 --max-complexity {[testenv:complexity]failure_threshold} \
        --extend-ignore=BLK,T,{[testenv:docstrings]report_only} \
        --show-source {posargs:src/ testing/src/}
    poetry run python3 -m mypy --config-file mypy.ini {posargs:src/ testing/src/}
    - poetry run python3 -m flake8 --max-complexity {[testenv:complexity]report_threshold} \
        --select=C,{[testenv:docstrings]report_only} \
        --statistics {posargs:src/ testing/src/}

[testenv:checklint]
description = report linting 
envdir = {toxworkdir}/.lint_env
allowlist_externals =
    mkdir
    poetry
commands = 
    mkdir -p build/reports
    poetry install --no-root
    - poetry run python3 -m flake8 --max-complexity {[testenv:complexity]failure_threshold} \
        --extend-ignore=T,{[testenv:docstrings]report_only} \
        --format=junit-xml --output-file=build/reports/linting.xml \
        {posargs:src/ testing/src/}
    poetry run python3 -m flake8 --max-complexity {[testenv:complexity]failure_threshold} \
        --extend-ignore=T,{[testenv:docstrings]report_only} \
        --show-source {posargs:src/ testing/src/}
    poetry run python3 -m docformatter -r {[testenv:lint]docformatter_args} {posargs:src/ testing/src/}
    poetry run python3 -m mypy --config-file mypy.ini {posargs:src/ testing/src/}
    - poetry run python3 -m flake8 --max-complexity {[testenv:complexity]report_threshold} \
        --select=C,{[testenv:docstrings]report_only} \
        --statistics {posargs:src/ testing/src/}

[testenv:complexity]
failure_threshold=9
report_threshold=8

description = Check McCabe cyclomatic complexity
envdir = {toxworkdir}/.lint_env
commands =
    poetry install --no-root
    poetry run python3 -m flake8 --select=C --max-complexity {posargs:{[testenv:complexity]report_threshold}} src/ testing/src/

[testenv:typecheck]
description = Perform static type checking
envdir = {toxworkdir}/.lint_env
commands =
    poetry install --no-root
    poetry run python3 -m mypy --config-file mypy.ini {posargs:src/ testing/src/}

[testenv:docstrings]
report_only=D205,D400,D401
basepython = python3
skip_install = true
description = Check for type hint annotations
envdir = {toxworkdir}/.lint_env
commands =
    poetry install --no-root
    poetry run python3 -m flake8 --select=D,DARG,RST --show-source --statistics {posargs:src/ testing/src/}

[testenv:todo]
description = Check code for TODO, FIXME, HACK, XXX, etc in comments
envdir = {toxworkdir}/.lint_env
commands =
    poetry install --no-root
    poetry run python3 -m flake8 --select=T --show-source {posargs:src/ testing/src/}

[testenv:package]
description = build packages and check validity
commands =
    poetry build
    ; poetry run twine check dist/*

[flake8]
# We have some long sphinx cross-refs that can't be broken. Black will still wrap at 88.
max-line-length = 110

rst-directives = literalinclude
rst-roles = py:attr, py:class, py:const, py:exc, py:func, py:meth, py:mod
docstring-style = sphinx
enable = DAR104
ignore = E203,FS003,W503,E231  # E203 and W503 conflict with black
per-file-ignores =
    # N802 = PEP8 lowercase function name -- conflicts with Tango conventions
    src/ska_low_mccs/antenna/antenna_device.py: N802
    src/ska_low_mccs/antenna/demo_antenna_device.py: N802
    src/ska_low_mccs/apiu/apiu_device.py: N802
    src/ska_low_mccs/apiu/demo_apiu_device.py: N802
    src/ska_low_mccs/cluster_manager/cluster_manager_device.py: N802
    src/ska_low_mccs/controller/controller_device.py: N802
    src/ska_low_mccs/pasd_bus/pasd_bus_device.py: N802
    src/ska_low_mccs/station/station_device.py: N802
    src/ska_low_mccs/station_beam/station_beam_device.py: N802
    src/ska_low_mccs/subarray/subarray_device.py: N802
    src/ska_low_mccs/subarray_beam/subarray_beam_device.py: N802
    src/ska_low_mccs/subrack/demo_subrack_device.py: N802
    src/ska_low_mccs/subrack/subrack_device.py: N802
    src/ska_low_mccs/tel_state/tel_state_device.py: N802
    src/ska_low_mccs/tile/tile_device.py: N802
    src/ska_low_mccs/tile/demo_tile_device.py: N802
    src/ska_low_mccs/tile/tile_cli.py: N802
    src/ska_low_mccs/transient_buffer/transient_buffer_device.py: N802
    testing/src/tests/integration/test_integration_tmc.py: N802
    testing/src/tests/unit/antenna/conftest.py: N802
    testing/src/tests/unit/antenna/test_antenna_device.py: N802
    testing/src/tests/unit/apiu/test_apiu_device.py: N802
    testing/src/tests/unit/cluster_manager/test_cluster_manager_device.py: N802
    testing/src/tests/unit/controller/test_controller_device.py: N802
    testing/src/tests/unit/pasd_bus/test_pasd_bus_device.py: N802
    testing/src/tests/unit/station/test_station_device.py: N802
    testing/src/tests/unit/station_beam/test_station_beam_device.py: N802
    testing/src/tests/unit/subarray/test_subarray_device.py: N802
    testing/src/tests/unit/subarray_beam/test_subarray_beam_device.py: N802
    testing/src/tests/unit/subrack/test_subrack_device.py: N802
    testing/src/tests/unit/tel_state/test_tel_state_device.py: N802
    testing/src/tests/unit/tile/conftest.py: N802
    testing/src/tests/unit/tile/test_tile_device.py: N802
    testing/src/tests/unit/transient_buffer/test_transient_buffer_device.py: N802
